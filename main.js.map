{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/approute.module.ts","webpack:///./src/app/components/car-reduce-or-replenish.component.css","webpack:///./src/app/components/car-reduce-or-replenish.component.html","webpack:///./src/app/components/car-reduce-or-replenish.component.ts","webpack:///./src/app/components/car.component.css","webpack:///./src/app/components/car.component.html","webpack:///./src/app/components/car.component.ts","webpack:///./src/app/components/electricity.component.css","webpack:///./src/app/components/electricity.component.html","webpack:///./src/app/components/electricity.component.ts","webpack:///./src/app/components/enlighten.component.css","webpack:///./src/app/components/enlighten.component.html","webpack:///./src/app/components/enlighten.component.ts","webpack:///./src/app/components/etotals.component.css","webpack:///./src/app/components/etotals.component.html","webpack:///./src/app/components/etotals.component.ts","webpack:///./src/app/components/export.component.css","webpack:///./src/app/components/export.component.html","webpack:///./src/app/components/export.component.ts","webpack:///./src/app/components/pie-chart.component.css","webpack:///./src/app/components/pie-chart.component.html","webpack:///./src/app/components/pie-chart.component.ts","webpack:///./src/app/components/reduce-or-replenish.component.css","webpack:///./src/app/components/reduce-or-replenish.component.html","webpack:///./src/app/components/reduce-or-replenish.component.ts","webpack:///./src/app/enlighten.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#csia-logo {\\n    width: 8vw;\\n}\"","module.exports = \"<mat-sidenav-container fullscreen>\\n  <mat-sidenav mode=\\\"side\\\" #sideMenu> \\n    <mat-toolbar color=\\\"primary\\\"> </mat-toolbar>\\n    <mat-nav-list>\\n      <mat-list-item *ngFor=\\\"let l of labels\\\" (click)=\\\"showItem(l)\\\">\\n        {{ l }}\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n\\n    <mat-toolbar color=\\\"primary\\\" \\n        fxLayout=\\\"row column\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <div fxLayoutAlign=\\\"start center\\\">\\n        <!-- event binding -->\\n        <mat-icon style=\\\"margin-right: 10px;\\\" (click)=\\\"toggleSideMenu()\\\">\\n          menu\\n        </mat-icon>\\n        <span></span>\\n      </div>\\n      <img src=\\\"assets/lightbulb.png\\\" id=\\\"csia-logo\\\">\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\"","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav } from '@angular/material/sidenav'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  labels = [ 'Enlighten', 'Electricity', 'Car', 'Food', 'Air Travel' ]\n\n  //Look for the reference sideMenu and inject into this class as MatSidenav\n  @ViewChild('sideMenu') sideMenu: MatSidenav;\n\n  //Inject in the router component / must have private\n  constructor(private router: Router) { }\n\n  toggleSideMenu() {\n    this.sideMenu.toggle();\n  }\n\n  showItem(menuItem: string) {\n    console.log('>>> selected: ', menuItem);\n    this.sideMenu.close();\n    this.router.navigate(['/', menuItem.toLocaleLowerCase() ])\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\n//AppComponent is part of the generated code\nimport { AppComponent } from './app.component';\n\nimport { MaterialModule } from './material.module';\nimport { EnlightenComponent } from './components/enlighten.component';\nimport { AppRouteModule } from './approute.module';\nimport { ElectricityComponent } from './components/electricity.component';\nimport { CarComponent } from './components/car.component';\nimport { EtotalsComponent } from './components/etotals.component';\nimport { ReduceOrReplenishComponent } from './components/reduce-or-replenish.component';\nimport { EnlightenService } from './enlighten.service';\nimport { PieChartComponent } from './components/pie-chart.component';\nimport { ExportComponent } from './components/export.component';\nimport { CarReduceOrReplenishComponent } from './components/car-reduce-or-replenish.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EnlightenComponent,\n    ElectricityComponent,\n    CarComponent,\n    EtotalsComponent,\n    ReduceOrReplenishComponent,\n    PieChartComponent,\n    ExportComponent,\n    CarReduceOrReplenishComponent,\n  ],\n  //Imports all exported components @NgModule({ exports: [ ... ]})\n  imports: [\n    BrowserModule, BrowserAnimationsModule, FormsModule,\n    MaterialModule, AppRouteModule, \n  ],\n  providers: [ EnlightenService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\nimport { EnlightenComponent } from './components/enlighten.component';\nimport { ElectricityComponent } from './components/electricity.component';\nimport { CarComponent} from './components/car.component';\nimport { EtotalsComponent } from './components/etotals.component';\nimport { ReduceOrReplenishComponent } from './components/reduce-or-replenish.component';\nimport { ExportComponent } from './components/export.component';\n\nconst APPROUTE: Routes = [\n    { path: \"\", component: EnlightenComponent },\n    { path: \"enlighten\", component: EnlightenComponent },\n    { path: \"electricity\", component: ElectricityComponent },\n    { path: \"car\", component: CarComponent},\n    //Need to add routes here \n    { path: \"etotals\", component: EtotalsComponent },\n    { path: \"reduceorreplenish\", component: ReduceOrReplenishComponent },\n    { path: \"export\", component: ExportComponent },\n\n    //Last line\n    { path: '**', redirectTo: '/', pathMatch: 'full' }\n]\n\n@NgModule({\n    imports: [ RouterModule.forRoot(APPROUTE) ],\n    exports: [ RouterModule ]\n})\nexport class AppRouteModule { }","module.exports = \"\"","module.exports = \"<p>\\n  car-reduce-or-replenish works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-car-reduce-or-replenish',\n  templateUrl: './car-reduce-or-replenish.component.html',\n  styleUrls: ['./car-reduce-or-replenish.component.css']\n})\nexport class CarReduceOrReplenishComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-tab-group >\\n    <mat-tab label=\\\"Car\\\"> \\n      <div style =\\\"padding: 10px;\\\" >\\n     <div fxLayoutAlign = \\\"center\\\" > \\n       <h1 id = \\\"title\\\" >Car</h1> </div>\\n      <h2>1. Cars</h2>\\n      <p>Let's evaluate your Car Usage! Find out how costly your usage is:</p>\\n  \\n      <form fxLayout=\\\"column row\\\" style=\\\"padding: 10px;\\\" fxLayoutAlign = \\\"space-between\\\"\\n          #carForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveCar()\\\">\\n      \\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CQty\\\" placeholder=\\\"Quantity\\\" \\n              required matInput [ngModel]=\\\"carData.Cqty\\\">\\n          <mat-hint>Please enter the number of cars you have</mat-hint>\\n        </mat-form-field>\\n      \\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CHrs\\\" placeholder=\\\"Number of Hours\\\" \\n              required matInput [ngModel]=\\\"carData.Chrs\\\">\\n          <mat-hint>Please enter your average daily usage (hours)</mat-hint>\\n        </mat-form-field>\\n          <mat-form-field>\\n              <input type=\\\"number\\\" name=\\\"CMonthlyCost\\\" placeholder=\\\"Monthly Cost ($)\\\" \\n                  [(ngModel)]=\\\"carData.CmonthlyTotal\\\" readonly matInput >\\n              \\n            </mat-form-field>\\n    \\n            <mat-form-field>\\n                <input type=\\\"number\\\" name=\\\"CYearlyCost\\\"  placeholder=\\\"Yearly Cost ($)\\\" \\n                    [(ngModel)]=\\\"carData.CyearlyTotal\\\" readonly matInput>\\n                \\n              </mat-form-field>\\n    \\n              <mat-form-field>\\n                <input type=\\\"number\\\" name=\\\"CCo2\\\" placeholder=\\\"CO2 Equivalence\\\" \\n                    [(ngModel)]=\\\"carData.Cco2\\\" readonly matInput>\\n                </mat-form-field>\\n    \\n              <div>\\n                <button type=\\\"submit\\\" mat-button mat-raised-button color=\\\"accent\\\">\\n                  <mat-icon>save</mat-icon> Save\\n                </button>\\n    \\n              </div>\\n           \\n          </form>\\n        </div>\\n          </mat-tab>\\n        </mat-tab-group>\\n\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { CarData } from '../model';\nimport { EnlightenService } from '../enlighten.service';\n\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.css']\n})\nexport class CarComponent implements OnInit, OnDestroy {\n\n  formSub: Subscription;\n  @ViewChild('carForm') carForm: NgForm;\n\n  carData: CarData = {\n    name: 'car',\n    Cqty: 0,\n    Chrs: 0,\n    CmonthlyTotal: 0,\n    CyearlyTotal: 0,\n    Cco2: 0,\n\n  }\n\n\n\n\n\n\n  constructor(private router: Router, private enlightenSvc: EnlightenService) { }\n\n  ngOnInit() {\n    this.formSub = this.carForm.valueChanges.subscribe(\n      //When the form is changed, this function will be called\n      //Update calulation when form data changes\n      (val) => {\n        const carQty = val.Cqty || 0;\n        const carHrs = val.Chrs || 0;\n        this.carData.Cqty = carQty;\n        this.carData.Chrs = carHrs;\n        this.carData.CmonthlyTotal = carQty * 1.5 * carHrs * 30 * 0.23;\n        this.carData.CyearlyTotal = this.carData.CmonthlyTotal * 12;\n        this.carData.Cco2 = this.carData.CmonthlyTotal * 0.2;\n        \n      }\n\n      \n    )\n    this.enlightenSvc.getAllData()\n        .then(results => {\n          console.log('results: ', results);\n          this.carData = results[0];\n          \n        })\n  }\n  ngOnDestroy() {\n    //Must unsub otherwise memory leak\n    this.formSub.unsubscribe();\n  }\n  saveCar() {\n    \n    const promise = this.enlightenSvc.updateCar(this.carData);\n    promise.then(() => {\n     \n    });\n    promise.catch((err) => {\n      console.error('Update error: ', err);\n    });\n}\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-tab-group>\\n  <mat-tab label=\\\"Airconditioner\\\">\\n    <div style=\\\"padding: 10px;\\\">\\n      <div fxLayoutAlign=\\\"center\\\">\\n        <h1 id=\\\"title\\\">Electricity</h1>\\n      </div>\\n      <h2>1. Airconditioners</h2>\\n      <p>Let's start with the Airconditioner! ACs are the most energy intensive appliances in Singapore households.\\n        Find out how costly your usage is:</p>\\n\\n      <form fxLayout=\\\"column row\\\" style=\\\"padding: 10px;\\\" fxLayoutAlign=\\\"space-between\\\" #electricityForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"saveValues()\\\">\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"ACqty\\\" placeholder=\\\"Quantity\\\" required matInput [ngModel]=\\\"electricityData.ACqty\\\">\\n          <mat-hint>Please enter the number of aircons you have</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"AChrs\\\" placeholder=\\\"Number of Hours\\\" required matInput [ngModel]=\\\"electricityData.AChrs\\\">\\n          <mat-hint>Please enter your average daily usage (hours)</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"ACkWH\\\" value=\\\"1.5\\\" placeholder=\\\"KiloWatts per Hour used\\\" required matInput\\n            readonly>\\n          <mat-hint>This is our suggested value</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"ACMonthlyCost\\\" placeholder=\\\"Monthly Cost ($)\\\" [(ngModel)]=\\\"electricityData.monthlyTotal\\\"\\n            readonly matInput>\\n\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"ACYearlyCost\\\" placeholder=\\\"Yearly Cost ($)\\\" [(ngModel)]=\\\"electricityData.yearlyTotal\\\"\\n            readonly matInput>\\n\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"ACCO2\\\" placeholder=\\\"CO2 Equivalence\\\" [(ngModel)]=\\\"electricityData.co2\\\" readonly\\n            matInput>\\n        </mat-form-field>\\n\\n        <div>\\n          <button type=\\\"submit\\\" mat-button mat-raised-button color=\\\"accent\\\">\\n            <mat-icon>save</mat-icon> Save\\n          </button>\\n\\n        </div>\\n\\n      </form>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"Water Heater\\\">\\n    <div style=\\\"padding: 10px;\\\">\\n      <h1 id=\\\"title\\\">Electricity</h1>\\n      <h2>2. Water Heaters</h2>\\n      <p>Water Heaters are the 2nd most energy intensive appliances in Singapore households. Find out how costly your\\n        usage is:</p>\\n      <form fxLayout=\\\"column row\\\" style=\\\"padding: 10px;\\\" fxLayoutAlign=\\\"space-between\\\" #waterHeaterForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"processWaterHeater()\\\">\\n\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHqty\\\" placeholder=\\\"Quantity\\\" required matInput required matInput [ngModel]=\\\"waterHeaterData.WHqty\\\">\\n          <mat-hint>Please enter the number of water heaters you have</mat-hint>\\n\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHhrs\\\" placeholder=\\\"Number of Hours\\\" required matInput required matInput [ngModel]=\\\"waterHeaterData.WHhrs\\\">\\n          <mat-hint>Please enter your average daily usage (hours)</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHkWH\\\" value=\\\"3\\\" placeholder=\\\"KiloWatts per Hour used\\\" required matInput required\\n            matInput readonly>\\n          <mat-hint>This is our suggested value</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHMonthlyCost\\\" placeholder=\\\"Monthly Cost ($)\\\" required matInput [(ngModel)]=\\\"waterHeaterData.WHmonthlyTotal\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHYearlyCost\\\" placeholder=\\\"Yearly Cost ($)\\\" required matInput [(ngModel)]=\\\"waterHeaterData.WHmonthlyTotal\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"WHCO2\\\" placeholder=\\\"CO2 Equivalence\\\" required matInput [(ngModel)]=\\\"waterHeaterData.WHco2\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n        <div>\\n          <button type=\\\"submit\\\" mat-button mat-raised-button color=\\\"accent\\\">\\n            <mat-icon>save</mat-icon> Save\\n          </button>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </mat-tab>\\n  <mat-tab label=\\\"Dryer\\\">\\n    <div style=\\\"padding: 10px;\\\">\\n      <h1 id=\\\"title\\\"> Electricity</h1>\\n\\n      <h2>3. Dryer</h2>\\n      <p>Clothes Dryers are a huge part of your energy consumption and also one of the easiest to reduce. Find out how\\n        costly your usage is:</p>\\n      <form fxLayout=\\\"column row\\\" style=\\\"padding: 10px;\\\" fxLayoutAlign=\\\"space-between\\\" #dryerForm=\\\"ngForm\\\" (ngSubmit)=\\\"dryer()\\\">\\n\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDqty\\\" placeholder=\\\"Quantity\\\" required matInput required matInput [ngModel]=\\\"dryerData.CDqty\\\">\\n          <mat-hint>Please enter the number of aircons you have</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDhrs\\\" placeholder=\\\"Number of Hours\\\" required matInput required matInput [ngModel]=\\\"dryerData.CDhrs\\\">\\n          <mat-hint>Please enter your average daily usage (hours)</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDkWH\\\" value=\\\"3\\\" placeholder=\\\"KiloWatts per Hour used\\\" required matInput required\\n            matInput readonly>\\n          <mat-hint>This is our suggested value</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDMonthlyCost\\\" placeholder=\\\"Monthly Cost ($)\\\" required matInput [(ngModel)]=\\\"dryerData.CDmonthlyTotal\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDYearlyCost\\\" placeholder=\\\"Yearly Cost ($)\\\" required matInput [(ngModel)]=\\\"dryerData.CDyearlyTotal\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"number\\\" name=\\\"CDCO2\\\" placeholder=\\\"CO2 Equivalence\\\" required matInput [(ngModel)]=\\\"dryerData.CDco2\\\"\\n            readonly matInput>\\n        </mat-form-field>\\n        <div fxLayoutAlign=\\\"space-around\\\">\\n          <button type=\\\"button\\\" mat-button mat-raised-button color=\\\"accent\\\" (click)=\\\"exportData()\\\">\\n            <mat-icon>import_export</mat-icon> Export\\n          </button>\\n\\n          <button type=\\\"submit\\\" mat-button mat-raised-button color=\\\"accent\\\">\\n            <mat-icon>save</mat-icon> Save\\n          </button>\\n\\n          <button type=\\\"button\\\" mat-button mat-raised-button color=\\\"accent\\\" (click)=\\\"submit()\\\">\\n            <mat-icon>list</mat-icon>\\n            Summary\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </mat-tab>\\n\\n\\n</mat-tab-group>\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Router } from '@angular/router';\n\nimport { ElectricityData } from '../model';\nimport { EnlightenService } from '../enlighten.service';\n\nimport { WaterHeaterData } from '../model';\nimport { DryerData } from '../model';\n\n@Component({\n  selector: 'app-electricity',\n  templateUrl: './electricity.component.html',\n  styleUrls: ['./electricity.component.css']\n})\nexport class ElectricityComponent implements OnInit, OnDestroy {\n\n  formSub: Subscription;\n\n  @ViewChild('dryerForm') dryerForm: NgForm;\n\n  dryerData: DryerData = {\n\n    name: 'dryer',\n    CDqty: 0,\n    CDhrs: 0,\n    CDkWH: 3,\n    CDmonthlyTotal: 0,\n    CDyearlyTotal: 0,\n    CDco2: 0\n\n\n\n\n  }\n\n  @ViewChild('waterHeaterForm') WaterHeaterForm: NgForm;\n\n  waterHeaterData: WaterHeaterData = {\n    name: 'waterHeater',\n    WHqty: 0,\n    WHhrs: 0,\n    WHkWH: 3,\n    WHmonthlyTotal: 0,\n    WHyearlyTotal: 0,\n    WHco2: 0\n\n  }\n\n  @ViewChild('electricityForm') electricityForm: NgForm;\n\n  electricityData: ElectricityData = {\n    name: 'electricity',\n    ACqty: 0,\n    AChrs: 0,\n    ACkWH: 1.5,\n    monthlyTotal: 0,\n    yearlyTotal: 0,\n    co2: 0\n\n  };\n\n\n  constructor(private router: Router, private enlightenSvc: EnlightenService) { }\n\n  //Called when component is created\n  ngOnInit() {\n    this.formSub = this.electricityForm.valueChanges.subscribe(\n      //When the form is changed, this function will be called\n      //Update calulation when form data changes\n      (val) => {\n        console.info('>>> elec form changes')\n        const acQty = val.ACqty || 0;\n        const acHrs = val.AChrs || 0;\n        this.electricityData.ACqty = acQty;\n        this.electricityData.AChrs = acHrs;\n        this.electricityData.monthlyTotal = acQty * 1.5 * acHrs * 30 * 0.23;\n        this.electricityData.yearlyTotal = this.electricityData.monthlyTotal * 12;\n        this.electricityData.co2 = this.electricityData.monthlyTotal * 0.2;\n        console.info('done')\n      }\n\n    )\n    this.formSub = this.dryerForm.valueChanges.subscribe(\n      //When the form is changed, this function will be called\n      //Update calulation when form data changes\n      (val) => {\n        const cdQty = val.CDqty || 0;\n        const cdHrs = val.CDhrs || 0;\n        this.dryerData.CDqty = cdQty;\n        this.dryerData.CDhrs = cdHrs;\n        this.dryerData.CDmonthlyTotal = cdQty * 1.5 * cdHrs * 30 * 0.23;\n        this.dryerData.CDyearlyTotal = this.dryerData.CDmonthlyTotal * 12;\n        this.dryerData.CDco2 = this.dryerData.CDmonthlyTotal * 0.2;\n      }\n\n    )\n    this.formSub = this.WaterHeaterForm.valueChanges.subscribe(\n      (val) => {\n        const whQty = val.WHqty || 0;\n        const whHrs = val.WHhrs || 0;\n        this.waterHeaterData.WHqty = whQty;\n        this.waterHeaterData.WHhrs = whHrs;\n        this.waterHeaterData.WHmonthlyTotal = whQty * 3 * whHrs * 30 * 0.23;\n        this.waterHeaterData.WHyearlyTotal = this.waterHeaterData.WHmonthlyTotal * 12;\n        this.waterHeaterData.WHco2 = this.waterHeaterData.WHmonthlyTotal * 0.2;\n      }\n    )\n\n    this.enlightenSvc.getAllData()\n      .then(results => {\n        console.log('results: ', results);\n        this.electricityData = results[0];\n        this.waterHeaterData = results[1];\n        this.dryerData = results[2];\n      })\n\n    // Monad\n    /*\n    this.enlightenSvc.getElectricity() //returns a Promise\n      .then((recs: ElectricityData[]) => {\n        console.log('result from database: ', recs);\n        if (recs.length > 0) {\n          this.electricityData = recs[0];\n        }\n      }) //returns a Promise\n      .catch(err => {\n        console.error('Get error: ', err);\n      })\n      */\n  }\n\n  ngOnDestroy() {\n    //Must unsub otherwise memory leak\n    this.formSub.unsubscribe();\n  }\n  processWaterHeater() {\n    console.log('saving values')\n\n    console.log(this.waterHeaterData);\n    const promise = this.enlightenSvc.updateWaterHeater(this.waterHeaterData);\n    promise.then(() => {\n      console.log('we have save the data')\n    });\n    //reject/bad -> catch will be called\n    promise.catch((err) => {\n      console.error('Update error: ', err);\n    });\n  }\n\n\n  dryer() {\n    console.log('saving values')\n    const promise = this.enlightenSvc.updateDryer(this.dryerData);\n    promise.then(() => {\n      console.log('we have save the data')\n    });\n    //reject/bad -> catch will be called\n    promise.catch((err) => {\n      console.error('Update error: ', err);\n    });\n  }\n\n\n  saveValues() {\n    console.log('saving values to database: ', this.electricityData);\n    const promise = this.enlightenSvc.updateElectricity(this.electricityData)\n    //resolve/good -> then will be called\n    promise.then(() => {\n      console.log('we have save the data')\n    });\n    //reject/bad -> catch will be called\n    promise.catch((err) => {\n      console.error('Update error: ', err);\n    });\n\n  }\n\n  submit() {\n    this.router.navigate(['/etotals']);\n  }\n\n  exportData() {\n    this.router.navigate(['/export'])\n  }\n\n}\n","module.exports = \"#enlighten-logo {\\n    width:90vw;\\n    position: center;\\n}\\nbody{\\n    margin: 10;\\n}\"","module.exports = \"\\n<body>\\n<img src=\\\"assets/enlighten.png\\\" id=\\\"enlighten-logo\\\">\\n<h3> A smart energy calculator with practical tips and exact information about your energy usage!</h3>\\n<p>Here at Enlighten you can discover your true impact on the environment - and what's better, find out exactly how to reduce OR replenish your usage.</p>\\n<p>Navigate to the different categories: Electricity, Car, Food, Air Travel in the side menu to get started!</p>\\n\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-enlighten',\n  templateUrl: './enlighten.component.html',\n  styleUrls: ['./enlighten.component.css']\n})\nexport class EnlightenComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() { }\n\n  goto(route: string) {\n    this.router.navigate(['/electricity-totals', route]);\n  }\n\n}\n","module.exports = \"div {\\n    margin: 15px;\\n}\"","module.exports = \"<div>\\n  <h1>Electricity Totals</h1>\\n  <form #form=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n    <h2>Electricity</h2>\\n    <mat-form-field>\\n      <input type=\\\"number\\\" placeholder=\\\"Monthly Total\\\" readonly name=\\\"eMonthlyTotal\\\"\\n          matInput [ngModel]=\\\"monthlyTotal\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input type=\\\"number\\\" placeholder=\\\"Yearly Total\\\" readonly name=\\\"eYearlyTotal\\\"\\n          matInput [ngModel]=\\\"yearlyTotal\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input type=\\\"number\\\" placeholder=\\\"CO2\\\" readonly name=\\\"eCO2\\\"\\n          matInput [ngModel]=\\\"co2Total\\\">\\n    </mat-form-field>\\n\\n  </form>\\n\\n  <app-pie-chart *ngFor=\\\"let d of pieData\\\"\\n      [title]=\\\"d.name\\\" [pieData]=\\\"d.data\\\"></app-pie-chart>\\n\\n  <button type=\\\"button\\\" mat-button mat-raised-button color=\\\"accent\\\" (click)=\\\"submit()\\\">\\n      Submit\\n  </button>\\n  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EnlightenService } from '../enlighten.service';\nimport { ElectricityData, WaterHeaterData, DryerData } from '../model';\nimport { PieSlice } from './pie-chart.component';\n\nconst LABELS = [ 'Electricity', 'Water Heater', 'Dryer'];\n\n\n@Component({\n  selector: 'app-etotals',\n  templateUrl: './etotals.component.html',\n  styleUrls: ['./etotals.component.css']\n})\nexport class EtotalsComponent implements OnInit {\n\n  electricity: ElectricityData;\n  waterHeater: WaterHeaterData;\n  dryer: DryerData;\n\n  monthlyTotal = 0;\n  yearlyTotal = 0;\n  co2Total = 0;\n\n  pieData = [\n  ]\n\n  constructor(private enlightenSvc: EnlightenService, private router: Router) { }\n  \n  ngOnInit() {\n    this.enlightenSvc.getAllData()\n      .then(data => {\n        console.log('data:\\n', data);\n        this.electricity = data[0] as ElectricityData;\n        this.waterHeater = data[1] as WaterHeaterData;\n        this.dryer = data[2] as DryerData;\n        this.monthlyTotal = this.electricity.monthlyTotal + \n            this.waterHeater.WHmonthlyTotal + this.dryer.CDmonthlyTotal;\n        this.pieData.push({\n          name: 'Monthly Total',\n          data: this.normalize(this.monthlyTotal, \n            [ this.electricity.monthlyTotal, this.waterHeater.WHmonthlyTotal,\n              this.dryer.CDmonthlyTotal ], LABELS)\n        });\n          \n        this.yearlyTotal = this.electricity.yearlyTotal +\n            this.waterHeater.WHyearlyTotal + this.dryer.CDyearlyTotal;\n        this.pieData.push({\n          name: 'Yearly Total',\n          data: this.normalize(this.yearlyTotal, \n            [ this.electricity.yearlyTotal, this.waterHeater.WHyearlyTotal,\n              this.dryer.CDyearlyTotal ], LABELS)\n        });\n\n        this.co2Total = this.electricity.co2 + \n            this.waterHeater.WHco2 + this.dryer.CDco2;\n        this.pieData.push({\n          name: 'CO2 Emission',\n          data: this.normalize(this.co2Total, \n            [ this.electricity.co2, this.waterHeater.WHco2,\n              this.dryer.CDco2 ], LABELS)\n        });\n      })\n  }\n\n  normalize(total: number, data: number[], label: string[]): PieSlice[] {\n    const normData: PieSlice[] = []\n    for (let i in data) {\n      normData.push({\n        name: label[i],\n        y: Math.round((data[i] / total) * 100)\n      })\n    }\n    return (normData);\n  }\n  submit() {\n    this.router.navigate(['/reduceorreplenish']);\n  }\n\n}\n","module.exports = \".space-10 {\\n    margin: 10px;\\n}\"","module.exports = \"<div #toBeExported class=\\\"space-10\\\">\\n  <form #summaryForm=\\\"ngForm\\\" fxLayout=\\\"column row\\\" fxLayoutAlign=\\\"start stretch\\\">\\n    <mat-form-field>\\n      <textarea name=\\\"summaryData\\\" cols=\\\"100\\\" rows=\\\"5\\\" \\n          #summaryData\\n          matInput [ngModel]=\\\"all\\\" readonly>\\n      </textarea>\\n    </mat-form-field>\\n  </form>\\n\\n<div class=\\\"space-10\\\" fxLayoutAlign=\\\"space-between\\\">\\n  <button type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" \\n      [disabled]=\\\"!hasShare\\\" (click)=\\\"share()\\\">\\n    <mat-icon>share</mat-icon>\\n    Share\\n  </button>\\n  <button type=\\\"button\\\" (click)=\\\"copyIt(summaryForm, summaryData)\\\" mat-raised-button \\n      color=\\\"accent\\\">\\n    <mat-icon>file_copy</mat-icon>\\n    Copy \\n  </button>\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { EnlightenService } from '../enlighten.service';\nimport { ElectricityData, WaterHeaterData, DryerData} from '../model';\nimport { NgForm } from '@angular/forms';\n\ndeclare let navigator: any;\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.css']\n})\nexport class ExportComponent implements OnInit {\n\n  electricityData: ElectricityData;\n  waterHeaterData: WaterHeaterData;\n  dryerData: DryerData;\n\n  electricityCSV: string = \"\";\n  dryerCSV: string = \"\";\n  waterHeaterCSV: string = \"\";\n\n  all: string = \"\";\n\n  hasShare = false;\n\n  constructor(private enlightenSvc: EnlightenService) { }\n\n  ngOnInit() {\n    console.log('navigator: ', navigator);\n    this.hasShare = !! navigator.share;\n    this.enlightenSvc.getAllData()\n        .then(results => {\n          this.electricityData = results[0];\n          this.waterHeaterData = results[1];\n          this.dryerData = results[2];\n          this.electricityCSV = `electricity, ${this.electricityData.AChrs} ${this.electricityData.ACqty}, ` +\n            `${this.electricityData.co2}, ${this.electricityData.monthlyTotal}, ${this.electricityData.yearlyTotal}`\n          this.dryerCSV = `dryer, ${this.dryerData.CDhrs} ${this.dryerData.CDqty}, ` +\n            `${this.dryerData.CDco2}, ${this.dryerData.CDmonthlyTotal}, ${this.dryerData.CDyearlyTotal}`\n          this.waterHeaterCSV = `waterheater, ${this.waterHeaterData.WHhrs}, ${this.waterHeaterData.WHqty}` +\n            `${this.waterHeaterData.WHco2}, ${this.waterHeaterData.WHmonthlyTotal}, ${this.waterHeaterData.WHyearlyTotal}`\n\n          this.all = `${this.electricityCSV}\\n${this.dryerCSV}\\n${this.waterHeaterCSV}`\n        })\n  }\n\n  share() {\n    navigator.share({\n      title: 'Enlighten',\n      text: `${this.electricityCSV}\\n${this.dryerCSV}\\n${this.waterHeaterCSV}`\n    })\n  }\n\n  copyIt(form: NgForm, textArea: HTMLInputElement) {\n    textArea.select()\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div [chart]=\\\"pieChart\\\"></div>\"","import { Component, OnInit, Input, ViewChild, ElementRef, AfterContentInit } from '@angular/core';\nimport { Chart } from 'angular-highcharts';\n\nexport interface PieSlice {\n    name: string;\n    y: number;\n}\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css']\n})\nexport class PieChartComponent implements OnInit, AfterContentInit {\n\n  @Input() title: string = \"Pie Chart title\";\n  @Input() pieData: PieSlice[] = [];\n\n  pieChart: Chart;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  ngAfterContentInit() {\n      this.pieChart = new Chart({\n          chart: { type: 'pie' },\n          title: { text: this.title },\n          plotOptions: {\n              pie: {\n                  dataLabels: {\n                      enabled: true,\n                      format: '<b>{point.name}</b> {point.percentage:.1f}%'\n                  }\n              }\n          },\n          series: [{\n              data: this.pieData\n          }]\n      })\n  }\n\n}\n","module.exports = \"mat-slider {\\n    width: 300px;\\n  }\\n.margin-10 {\\n  margin: 10px;\\n}\"","module.exports = \"\\n\\n<mat-tab-group>\\n  <mat-tab label=\\\"Reduce\\\">\\n    <div class=\\\"margin-10\\\">\\n      <h1>Reduce</h1>\\n    <h3>Airconditioner Savings</h3>\\n    <p>Move the slider to see how much you can save</p>\\n    <p>If you change your aircon usage to <span>{{ acNumHrs }} </span> hours a day, it will cost you: <span> {{ reducedElectricity | currency }} </span></p>\\n    <mat-slider thumbLabel [displayWith]=\\\"formatLabel\\\" \\n        tickInterval=\\\"1\\\" min=\\\"0\\\" [max]=\\\"maxAC\\\" thumbLabel\\n        (change)=\\\"reduceElectricity($event)\\\">\\n      \\n    </mat-slider>\\n    <h3>Water Heater Savings</h3>\\n    <p>Move the slider to see how much you can save</p>\\n    <p>If you change your water heater usage to <span>{{ numHrs }} </span> hours a day, it will cost you: <span> {{ reducedElectricity }} </span></p>\\n    <!-- add reduce water -->\\n    <mat-slider thumbLabel [displayWith]=\\\"formatLabel\\\" \\n        tickInterval=\\\"1\\\" min=\\\"0\\\" [max]=\\\"maxWH\\\" thumbLabel\\n        (change)=\\\"reduceElectricity($event)\\\"  (change)=\\\"reduceHours($event)\\\">\\n      \\n    </mat-slider>\\n    <h3>Clothes Dryer Savings</h3>\\n    <p>Move the slider to see how much you can save</p>\\n    <p>If you change your clothes dryer usage to <span>{{ numHrs }} </span> hours a day, it will cost you: <span> {{ reducedElectricity }} </span></p>\\n    <!-- add reduce dryer -->\\n    <mat-slider thumbLabel [displayWith]=\\\"formatLabel\\\" \\n        tickInterval=\\\"1\\\" min=\\\"0\\\" [max]=\\\"maxCD\\\" thumbLabel\\n        (change)=\\\"reduceElectricity($event)\\\"  (change)=\\\"reduceHours($event)\\\">\\n    </mat-slider>\\n   \\n    </div>\\n\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"Replenish\\\">\\n      <div class=\\\"margin-10\\\">\\n    <h2>Replenish</h2>\\n<h4>Incase you find it difficult to reduce your electricity consumption, an alternative is to continue consuming at the same level but plant trees instead to offset your C02 emissions.</h4>\\n<h3>1 tonne of CO2 emitted can be replenished by 5 trees</h3>\\n<h4>Airconditioner</h4>\\n<p>Your total CO2 emissions for your airconditioner = {{ co2Total }}</p>\\n<p>Number of trees {{ co2Trees }}</p>\\n</div>\\n\\n\\n  </mat-tab>\\n\\n</mat-tab-group>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EnlightenService } from '../enlighten.service';\nimport { ElectricityData, WaterHeaterData, DryerData } from '../model';\nimport { MatSliderChange } from '@angular/material/slider';\n\n@Component({\n  selector: 'app-reduce-or-replenish',\n  templateUrl: './reduce-or-replenish.component.html',\n  styleUrls: ['./reduce-or-replenish.component.css']\n})\nexport class ReduceOrReplenishComponent implements OnInit {\n\n  electricity: ElectricityData;\n  waterHeater: WaterHeaterData;\n  dryer: DryerData;\n\n  reducedElectricity = 0.0;\n  acNumHrs = 0;\n  numHrs = 0;\n\n  maxAC = 0;\n  maxWH = 0;\n  maxCD = 0;\n\n  co2Total = 0;\n  co2Trees = 0;\n\n  readonly YEARLYACCONSTANT = 1.5 * 30 * 0.23 * 12;\n\n  constructor(private enlightenSvc: EnlightenService) { }\n\n  ngOnInit() {\n    this.enlightenSvc.getAllData()\n      .then(data => {\n        console.log('data:\\n', data);\n        this.electricity = data[0] as ElectricityData;\n        this.waterHeater = data[1] as WaterHeaterData;\n        this.dryer = data[2] as DryerData;\n\n        //Initialize all reductions\n        this.reducedElectricity = this.electricity.yearlyTotal;\n        this.acNumHrs = this.electricity.AChrs;\n\n        this.maxAC = this.electricity.AChrs;\n        this.maxWH = this.waterHeater.WHhrs;\n        this.maxCD = this.dryer.CDhrs;\n\n        //Initiaize all hours\n        this.acNumHrs = this.electricity.AChrs;\n\n        this.co2Total = this.electricity.co2 +\n          this.waterHeater.WHco2 + this.dryer.CDco2;\n      })\n  }\n\n  formatLabel(val: number) {\n    return (val);\n  }\n\n\n  reduceElectricity(event: MatSliderChange) {\n    let percentage = event.value;\n    this.reducedElectricity = Math.round(percentage * this.electricity.ACqty * this.YEARLYACCONSTANT * 100) / 100;\n\n    // if (event.value == 0) {\n    //     this.reducedElectricity = Math.round(this.electricity.yearlyTotal*100)/100;\n\n    //    return;\n    // }\n\n    //  percentage = 100 - percentage;\n    //  this.reducedElectricity = this.electricity.yearlyTotal * (percentage/100);\n    //  this.reducedElectricity = Math.round(this.reducedElectricity * 100)/100;\n\n    this.acNumHrs = event.value;\n\n  }\n  reduceHours(event: MatSliderChange) {\n    let hours = event.value;\n    if (event.value == 0) {\n      this.acNumHrs = this.electricity.AChrs;\n      return;\n    }\n    this.numHrs = this.electricity.AChrs * (hours / 100);\n  }\n}\n\n","import Dexie from 'dexie';\nimport { ElectricityData } from './model';\nimport { WaterHeaterData } from './model';\nimport { DryerData } from './model';\nimport { CarData } from './model';\n\nexport class EnlightenService {\n\n\n    db = new Dexie('enlightendb');\n\n\n\n    constructor() {\n        console.info('in create db')\n        this.db.version(1).stores({\n            //Schema - one for each category - go and delete the database\n            electricity: \"name,ACqty, AChrs,ACkWH, monthlyTotal, yearlyTotal, co2\",\n            waterHeater: \"name, WHqty, WHhrs, WHkWH, WHmonthlyTotal, WHyearlyTotal,WHco2\",\n            dryer: \"name, CDqty, CDhrs, CDkWH, CDmonthlyTotal, CDyearlyTotal,CDco2\",\n            car: \"name,Cqty, Chrs, CmonthlyTotal, CyearlyTotal, Cco2\",\n\n        });\n        //this.db.open();\n    }\n\n    updateCar(data:CarData): Promise<any> {\n        return(this.db['car'].put(data));\n    }\n    getCar():Promise<CarData[]>{\n        return(\n            this.db['car']\n                .where('name').equals('car')\n                .toArray()\n                .then(result => {\n                    if (!result.length)\n                        result.push({\n                            name: 'car',\n                            Cqty: 0,\n                            Chrs: 0,\n                            CmonthlyTotal: 0,\n                            CyearlyTotal: 0,\n                            Cco2: 0,\n                            \n                        })\n                    return (result);    \n            })\n        );\n    }\n\n    updateElectricity(data: ElectricityData): Promise<any> {\n        //insert the data if the rec does not exists - if no primary key matches\n        //if exists, update the record - if primary key matches our data\n        return (this.db['electricity'].put(data));\n        //add() only insert/create new - primary key (identity) must be unique\n        //return (this.db['electricity'].add(data));\n    }\n    \n    getElectricity(): Promise<ElectricityData[]> {\n        return (\n            //query the electricity table, return the records, if any as any array\n            this.db['electricity']\n                .where('name').equals('electricity') //this is the query\n                .toArray() //analogy carpark, default each - highway\n                .then(result => {\n                    if (!result.length)\n                        result.push({\n                            name: 'electricity',\n                            ACqty: 0,\n                            AChrs: 0,\n                            ACkWH: 0,\n                            monthlyTotal: 0,\n                            yearlyTotal: 0,\n                            co2: 0\n                        })\n                    return (result);\n                })\n        );\n\n       \n    }\n    updateWaterHeater(data: WaterHeaterData): Promise<any> {\n        //insert the data if the rec does not exists - if no primary key matches\n        //if exists, update the record - if primary key matches our data\n        return (this.db['waterHeater'].put(data));\n        //add() only insert/create new - primary key (identity) must be unique\n        //return (this.db['electricity'].add(data));\n    }\n    getWaterHeater(): Promise<WaterHeaterData[]> {\n        return (\n            //query the electricity table, return the records, if any as any array\n            this.db['waterHeater']\n                .where('name').equals('waterHeater') //this is the query\n                .toArray() //analogy carpark, default each - highway\n                .then(result => {\n                    if (!result.length)\n                        result.push({\n                            name: 'waterHeater',\n                            WHqty: 0,\n                            WHhrs: 0,\n                            WHmonthlyTotal: 0,\n                            WHyearlyTotal: 0,\n                            WHco2: 0\n                        })\n                    return(result);\n                })\n        );\n\n       \n    }\n    updateDryer(data: DryerData): Promise<any> {\n        //insert the data if the rec does not exists - if no primary key matches\n        //if exists, update the record - if primary key matches our data\n        return (this.db['dryer'].put(data));\n        //add() only insert/create new - primary key (identity) must be unique\n        //return (this.db['electricity'].add(data));\n    }\n    getDryer(): Promise<WaterHeaterData[]> {\n        return (\n            //query the electricity table, return the records, if any as any array\n            this.db['dryer']\n                .where('name').equals('dryer') //this is the query\n                .toArray() //analogy carpark, default each - highway\n                .then(result => {\n                    if (!result.length)\n                        result.push({\n                            name: 'dryer',\n                            CDqty: 0,\n                            CDhrs: 0,\n                            CDmonthylTotal: 0,\n                            CDyearlyTotal: 0,\n                            CDco2: 0\n                        })\n                    return (result);\n                })\n        );\n\n       \n    }\n\n\tgetAllData(): Promise<any> {\n\n\t\t//Each return a promise, call their respective get methods\n\t\t//and save the promise in an array\n\t\tconst promises = [];\n\t\tpromises.push(this.getElectricity())\n\t\tpromises.push(this.getWaterHeater())\n        promises.push(this.getDryer())\n        promises.push(this.getCar())\n\n\t\t\t//Now wait for all the promises to resolve. See \n\t\t\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n\t\t\t//When all the promises resolve, you'll get an array. The data in the array \n\t\t\t//is in the same sequence as we queried them above\n\t\tconst allResults = Promise.all(promises)\n\t\t\t\t.then(results => {\n\t\t\t\t\t//results is an array of [ electricity, water heater, dryer ]\n\t\t\t\t\t//Since each of them is an array, we 'flatten' the result by\n\t\t\t\t\t//retrieving the data and placing them in an array\n\t\t\t\t\t//We now return the array. \n\t\t\t\t\t//If you return something from within a promise (then), you'll get another\n\t\t\t\t\t//promise\n\t\t\t\t\tconst data = []\n\t\t\t\t\tfor (var i of results)\n\t\t\t\t\t\tdata.push(i[0])\n\t\t\t\t\t//This will be wrapped in a promise\n\t\t\t\t\treturn (data)\n                })\n\n        return (allResults);\n\t}\n}","import { NgModule } from \"@angular/core\";\nimport { ChartModule } from 'angular-highcharts'\nimport { FlexLayoutModule } from  '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSliderModule} from '@angular/material/slider';\n\n\nconst MODULES = [\n    ChartModule,\n    FlexLayoutModule,\n    MatToolbarModule, MatListModule, MatSidenavModule,\n    MatIconModule, MatInputModule, MatFormFieldModule,\n    MatButtonModule, MatTabsModule, MatSliderModule\n];\n\n@NgModule({\n    imports: MODULES,\n    exports: MODULES\n})\nexport class MaterialModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}